     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_keyfifo
    10 00000000                                 	EXTERN	_fifo8_init
    11 00000000                                 	EXTERN	_mousefifo
    12 00000000                                 	EXTERN	_io_out8
    13 00000000                                 	EXTERN	_init_palette
    14 00000000                                 	EXTERN	_init_screen8
    15 00000000                                 	EXTERN	_init_mouse_cursor8
    16 00000000                                 	EXTERN	_putblock8_8
    17 00000000                                 	EXTERN	_sprintf
    18 00000000                                 	EXTERN	_putfonts8_asc
    19 00000000                                 	EXTERN	_io_cli
    20 00000000                                 	EXTERN	_fifo8_status
    21 00000000                                 	EXTERN	_fifo8_get
    22 00000000                                 	EXTERN	_boxfill8
    23 00000000                                 	EXTERN	_io_stihlt
    24 00000000                                 	EXTERN	_io_in8
    25 00000000                                 [FILE "bootpack.c"]
    26                                          [SECTION .data]
    27 00000000                                 LC0:
    28 00000000 28 25 64 2C 20 25 64 29 00      	DB	"(%d, %d)",0x00
    29 00000009                                 LC2:
    30 00000009 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       00000013 34 64 5D 00 
    31 00000017                                 LC3:
    32 00000017 28 25 33 64 20 25 33 64 29 00   	DB	"(%3d %3d)",0x00
    33 00000021                                 LC1:
    34 00000021 25 30 32 58 00                  	DB	"%02X",0x00
    35                                          [SECTION .text]
    36 00000000                                 	GLOBAL	_HariMain
    37 00000000                                 _HariMain:
    38 00000000 55                              	PUSH	EBP
    39 00000001 89 E5                           	MOV	EBP,ESP
    40 00000003 57                              	PUSH	EDI
    41 00000004 56                              	PUSH	ESI
    42 00000005 53                              	PUSH	EBX
    43 00000006 BB 00000002                     	MOV	EBX,2
    44 0000000B 81 EC 000001E4                  	SUB	ESP,484
    45 00000011 E8 [00000000]                   	CALL	_init_gdtidt
    46 00000016 E8 [00000000]                   	CALL	_init_pic
    47 0000001B E8 [00000000]                   	CALL	_io_sti
    48 00000020 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
    49 00000026 50                              	PUSH	EAX
    50 00000027 6A 20                           	PUSH	32
    51 00000029 68 [00000000]                   	PUSH	_keyfifo
    52 0000002E E8 [00000000]                   	CALL	_fifo8_init
    53 00000033 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
    54 00000039 50                              	PUSH	EAX
    55 0000003A 68 00000080                     	PUSH	128
    56 0000003F 68 [00000000]                   	PUSH	_mousefifo
    57 00000044 E8 [00000000]                   	CALL	_fifo8_init
    58 00000049 68 000000F9                     	PUSH	249
    59 0000004E 6A 21                           	PUSH	33
    60 00000050 E8 [00000000]                   	CALL	_io_out8
    61 00000055 83 C4 20                        	ADD	ESP,32
    62 00000058 68 000000EF                     	PUSH	239
    63 0000005D 68 000000A1                     	PUSH	161
    64 00000062 E8 [00000000]                   	CALL	_io_out8
    65 00000067 E8 000002E9                     	CALL	_init_keyboard
    66 0000006C E8 [00000000]                   	CALL	_init_palette
    67 00000071 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    68 00000078 50                              	PUSH	EAX
    69 00000079 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    70 00000080 50                              	PUSH	EAX
    71 00000081 FF 35 00000FF8                  	PUSH	DWORD [4088]
    72 00000087 E8 [00000000]                   	CALL	_init_screen8
    73 0000008C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    74 00000093 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
    75 00000096 89 C8                           	MOV	EAX,ECX
    76 00000098 99                              	CDQ
    77 00000099 F7 FB                           	IDIV	EBX
    78 0000009B 89 C7                           	MOV	EDI,EAX
    79 0000009D 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
    80 000000A4 6A 0E                           	PUSH	14
    81 000000A6 8D 48 D4                        	LEA	ECX,DWORD [-44+EAX]
    82 000000A9 89 C8                           	MOV	EAX,ECX
    83 000000AB 99                              	CDQ
    84 000000AC F7 FB                           	IDIV	EBX
    85 000000AE 8D 9D FFFFFEC4                  	LEA	EBX,DWORD [-316+EBP]
    86 000000B4 89 C6                           	MOV	ESI,EAX
    87 000000B6 53                              	PUSH	EBX
    88 000000B7 E8 [00000000]                   	CALL	_init_mouse_cursor8
    89 000000BC 6A 10                           	PUSH	16
    90 000000BE 53                              	PUSH	EBX
    91 000000BF 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
    92 000000C2 56                              	PUSH	ESI
    93 000000C3 57                              	PUSH	EDI
    94 000000C4 6A 10                           	PUSH	16
    95 000000C6 6A 10                           	PUSH	16
    96 000000C8 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
    97 000000CF 50                              	PUSH	EAX
    98 000000D0 FF 35 00000FF8                  	PUSH	DWORD [4088]
    99 000000D6 E8 [00000000]                   	CALL	_putblock8_8
   100 000000DB 83 C4 3C                        	ADD	ESP,60
   101 000000DE 56                              	PUSH	ESI
   102 000000DF 57                              	PUSH	EDI
   103 000000E0 68 [00000000]                   	PUSH	LC0
   104 000000E5 53                              	PUSH	EBX
   105 000000E6 E8 [00000000]                   	CALL	_sprintf
   106 000000EB 53                              	PUSH	EBX
   107 000000EC 6A 07                           	PUSH	7
   108 000000EE 6A 00                           	PUSH	0
   109 000000F0 6A 00                           	PUSH	0
   110 000000F2 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   111 000000F9 50                              	PUSH	EAX
   112 000000FA FF 35 00000FF8                  	PUSH	DWORD [4088]
   113 00000100 E8 [00000000]                   	CALL	_putfonts8_asc
   114 00000105 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   115 0000010B 83 C4 28                        	ADD	ESP,40
   116 0000010E 50                              	PUSH	EAX
   117 0000010F E8 00000262                     	CALL	_enable_mouse
   118 00000114 59                              	POP	ECX
   119 00000115                                 L2:
   120 00000115 E8 [00000000]                   	CALL	_io_cli
   121 0000011A 68 [00000000]                   	PUSH	_keyfifo
   122 0000011F E8 [00000000]                   	CALL	_fifo8_status
   123 00000124 68 [00000000]                   	PUSH	_mousefifo
   124 00000129 89 C3                           	MOV	EBX,EAX
   125 0000012B E8 [00000000]                   	CALL	_fifo8_status
   126 00000130 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   127 00000133 5B                              	POP	EBX
   128 00000134 5A                              	POP	EDX
   129 00000135 85 C0                           	TEST	EAX,EAX
   130 00000137 0F 84 000001FC                  	JE	L18
   131 0000013D 68 [00000000]                   	PUSH	_keyfifo
   132 00000142 E8 [00000000]                   	CALL	_fifo8_status
   133 00000147 59                              	POP	ECX
   134 00000148 85 C0                           	TEST	EAX,EAX
   135 0000014A 0F 85 00000187                  	JNE	L19
   136 00000150 68 [00000000]                   	PUSH	_mousefifo
   137 00000155 E8 [00000000]                   	CALL	_fifo8_status
   138 0000015A 5A                              	POP	EDX
   139 0000015B 85 C0                           	TEST	EAX,EAX
   140 0000015D 74 B6                           	JE	L2
   141 0000015F 68 [00000000]                   	PUSH	_mousefifo
   142 00000164 E8 [00000000]                   	CALL	_fifo8_get
   143 00000169 89 C3                           	MOV	EBX,EAX
   144 0000016B E8 [00000000]                   	CALL	_io_sti
   145 00000170 0F B6 C3                        	MOVZX	EAX,BL
   146 00000173 50                              	PUSH	EAX
   147 00000174 8D 85 FFFFFE14                  	LEA	EAX,DWORD [-492+EBP]
   148 0000017A 50                              	PUSH	EAX
   149 0000017B E8 00000224                     	CALL	_mouse_decode
   150 00000180 83 C4 0C                        	ADD	ESP,12
   151 00000183 85 C0                           	TEST	EAX,EAX
   152 00000185 74 8E                           	JE	L2
   153 00000187 FF B5 FFFFFE1C                  	PUSH	DWORD [-484+EBP]
   154 0000018D FF B5 FFFFFE18                  	PUSH	DWORD [-488+EBP]
   155 00000193 68 [00000009]                   	PUSH	LC2
   156 00000198 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   157 0000019B 53                              	PUSH	EBX
   158 0000019C E8 [00000000]                   	CALL	_sprintf
   159 000001A1 83 C4 10                        	ADD	ESP,16
   160 000001A4 8B 85 FFFFFE20                  	MOV	EAX,DWORD [-480+EBP]
   161 000001AA A9 00000001                     	TEST	EAX,1
   162 000001AF 74 04                           	JE	L11
   163 000001B1 C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   164 000001B5                                 L11:
   165 000001B5 A9 00000002                     	TEST	EAX,2
   166 000001BA 74 04                           	JE	L12
   167 000001BC C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   168 000001C0                                 L12:
   169 000001C0 83 E0 04                        	AND	EAX,4
   170 000001C3 74 04                           	JE	L13
   171 000001C5 C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   172 000001C9                                 L13:
   173 000001C9 6A 1F                           	PUSH	31
   174 000001CB 68 00000097                     	PUSH	151
   175 000001D0 6A 10                           	PUSH	16
   176 000001D2 6A 20                           	PUSH	32
   177 000001D4 6A 0E                           	PUSH	14
   178 000001D6 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   179 000001DD 50                              	PUSH	EAX
   180 000001DE FF 35 00000FF8                  	PUSH	DWORD [4088]
   181 000001E4 E8 [00000000]                   	CALL	_boxfill8
   182 000001E9 53                              	PUSH	EBX
   183 000001EA 6A 07                           	PUSH	7
   184 000001EC 6A 10                           	PUSH	16
   185 000001EE 6A 20                           	PUSH	32
   186 000001F0 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   187 000001F7 50                              	PUSH	EAX
   188 000001F8 FF 35 00000FF8                  	PUSH	DWORD [4088]
   189 000001FE E8 [00000000]                   	CALL	_putfonts8_asc
   190 00000203 8D 46 0F                        	LEA	EAX,DWORD [15+ESI]
   191 00000206 83 C4 34                        	ADD	ESP,52
   192 00000209 50                              	PUSH	EAX
   193 0000020A 8D 47 0F                        	LEA	EAX,DWORD [15+EDI]
   194 0000020D 50                              	PUSH	EAX
   195 0000020E 56                              	PUSH	ESI
   196 0000020F 57                              	PUSH	EDI
   197 00000210 6A 0E                           	PUSH	14
   198 00000212 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   199 00000219 50                              	PUSH	EAX
   200 0000021A FF 35 00000FF8                  	PUSH	DWORD [4088]
   201 00000220 E8 [00000000]                   	CALL	_boxfill8
   202 00000225 83 C4 1C                        	ADD	ESP,28
   203 00000228 03 B5 FFFFFE1C                  	ADD	ESI,DWORD [-484+EBP]
   204 0000022E 03 BD FFFFFE18                  	ADD	EDI,DWORD [-488+EBP]
   205 00000234 0F 88 00000096                  	JS	L20
   206 0000023A                                 L14:
   207 0000023A 85 F6                           	TEST	ESI,ESI
   208 0000023C 0F 88 00000087                  	JS	L21
   209 00000242                                 L15:
   210 00000242 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   211 00000249 83 E8 10                        	SUB	EAX,16
   212 0000024C 39 C7                           	CMP	EDI,EAX
   213 0000024E 7E 02                           	JLE	L16
   214 00000250 89 C7                           	MOV	EDI,EAX
   215 00000252                                 L16:
   216 00000252 39 C6                           	CMP	ESI,EAX
   217 00000254 7E 02                           	JLE	L17
   218 00000256 89 C6                           	MOV	ESI,EAX
   219 00000258                                 L17:
   220 00000258 56                              	PUSH	ESI
   221 00000259 57                              	PUSH	EDI
   222 0000025A 68 [00000017]                   	PUSH	LC3
   223 0000025F 53                              	PUSH	EBX
   224 00000260 E8 [00000000]                   	CALL	_sprintf
   225 00000265 6A 0F                           	PUSH	15
   226 00000267 6A 4F                           	PUSH	79
   227 00000269 6A 00                           	PUSH	0
   228 0000026B 6A 00                           	PUSH	0
   229 0000026D 6A 0E                           	PUSH	14
   230 0000026F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   231 00000276 50                              	PUSH	EAX
   232 00000277 FF 35 00000FF8                  	PUSH	DWORD [4088]
   233 0000027D E8 [00000000]                   	CALL	_boxfill8
   234 00000282 83 C4 2C                        	ADD	ESP,44
   235 00000285 53                              	PUSH	EBX
   236 00000286 6A 07                           	PUSH	7
   237 00000288 6A 00                           	PUSH	0
   238 0000028A 6A 00                           	PUSH	0
   239 0000028C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   240 00000293 50                              	PUSH	EAX
   241 00000294 FF 35 00000FF8                  	PUSH	DWORD [4088]
   242 0000029A E8 [00000000]                   	CALL	_putfonts8_asc
   243 0000029F 8D 85 FFFFFEC4                  	LEA	EAX,DWORD [-316+EBP]
   244 000002A5 6A 10                           	PUSH	16
   245 000002A7 50                              	PUSH	EAX
   246 000002A8 56                              	PUSH	ESI
   247 000002A9 57                              	PUSH	EDI
   248 000002AA 6A 10                           	PUSH	16
   249 000002AC 6A 10                           	PUSH	16
   250 000002AE 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   251 000002B5 50                              	PUSH	EAX
   252 000002B6 FF 35 00000FF8                  	PUSH	DWORD [4088]
   253 000002BC E8 [00000000]                   	CALL	_putblock8_8
   254 000002C1 83 C4 38                        	ADD	ESP,56
   255 000002C4 E9 FFFFFE4C                     	JMP	L2
   256 000002C9                                 L21:
   257 000002C9 31 F6                           	XOR	ESI,ESI
   258 000002CB E9 FFFFFF72                     	JMP	L15
   259 000002D0                                 L20:
   260 000002D0 31 FF                           	XOR	EDI,EDI
   261 000002D2 E9 FFFFFF63                     	JMP	L14
   262 000002D7                                 L19:
   263 000002D7 68 [00000000]                   	PUSH	_keyfifo
   264 000002DC E8 [00000000]                   	CALL	_fifo8_get
   265 000002E1 89 C3                           	MOV	EBX,EAX
   266 000002E3 E8 [00000000]                   	CALL	_io_sti
   267 000002E8 53                              	PUSH	EBX
   268 000002E9 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   269 000002EC 68 [00000021]                   	PUSH	LC1
   270 000002F1 53                              	PUSH	EBX
   271 000002F2 E8 [00000000]                   	CALL	_sprintf
   272 000002F7 6A 1F                           	PUSH	31
   273 000002F9 6A 0F                           	PUSH	15
   274 000002FB 6A 10                           	PUSH	16
   275 000002FD 6A 00                           	PUSH	0
   276 000002FF 6A 0E                           	PUSH	14
   277 00000301 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   278 00000308 50                              	PUSH	EAX
   279 00000309 FF 35 00000FF8                  	PUSH	DWORD [4088]
   280 0000030F E8 [00000000]                   	CALL	_boxfill8
   281 00000314 83 C4 2C                        	ADD	ESP,44
   282 00000317 53                              	PUSH	EBX
   283 00000318 6A 07                           	PUSH	7
   284 0000031A 6A 10                           	PUSH	16
   285 0000031C 6A 00                           	PUSH	0
   286 0000031E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   287 00000325 50                              	PUSH	EAX
   288 00000326 FF 35 00000FF8                  	PUSH	DWORD [4088]
   289 0000032C E8 [00000000]                   	CALL	_putfonts8_asc
   290 00000331 83 C4 18                        	ADD	ESP,24
   291 00000334 E9 FFFFFDDC                     	JMP	L2
   292 00000339                                 L18:
   293 00000339 E8 [00000000]                   	CALL	_io_stihlt
   294 0000033E E9 FFFFFDD2                     	JMP	L2
   295 00000343                                 	GLOBAL	_wait_KBC_sendready
   296 00000343                                 _wait_KBC_sendready:
   297 00000343 55                              	PUSH	EBP
   298 00000344 89 E5                           	MOV	EBP,ESP
   299 00000346                                 L23:
   300 00000346 6A 64                           	PUSH	100
   301 00000348 E8 [00000000]                   	CALL	_io_in8
   302 0000034D 5A                              	POP	EDX
   303 0000034E 83 E0 02                        	AND	EAX,2
   304 00000351 75 F3                           	JNE	L23
   305 00000353 C9                              	LEAVE
   306 00000354 C3                              	RET
   307 00000355                                 	GLOBAL	_init_keyboard
   308 00000355                                 _init_keyboard:
   309 00000355 55                              	PUSH	EBP
   310 00000356 89 E5                           	MOV	EBP,ESP
   311 00000358 E8 FFFFFFE6                     	CALL	_wait_KBC_sendready
   312 0000035D 6A 60                           	PUSH	96
   313 0000035F 6A 64                           	PUSH	100
   314 00000361 E8 [00000000]                   	CALL	_io_out8
   315 00000366 E8 FFFFFFD8                     	CALL	_wait_KBC_sendready
   316 0000036B 6A 47                           	PUSH	71
   317 0000036D 6A 60                           	PUSH	96
   318 0000036F E8 [00000000]                   	CALL	_io_out8
   319 00000374 C9                              	LEAVE
   320 00000375 C3                              	RET
   321 00000376                                 	GLOBAL	_enable_mouse
   322 00000376                                 _enable_mouse:
   323 00000376 55                              	PUSH	EBP
   324 00000377 89 E5                           	MOV	EBP,ESP
   325 00000379 E8 FFFFFFC5                     	CALL	_wait_KBC_sendready
   326 0000037E 68 000000D4                     	PUSH	212
   327 00000383 6A 64                           	PUSH	100
   328 00000385 E8 [00000000]                   	CALL	_io_out8
   329 0000038A E8 FFFFFFB4                     	CALL	_wait_KBC_sendready
   330 0000038F 68 000000F4                     	PUSH	244
   331 00000394 6A 60                           	PUSH	96
   332 00000396 E8 [00000000]                   	CALL	_io_out8
   333 0000039B 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   334 0000039E C6 40 03 00                     	MOV	BYTE [3+EAX],0
   335 000003A2 C9                              	LEAVE
   336 000003A3 C3                              	RET
   337 000003A4                                 	GLOBAL	_mouse_decode
   338 000003A4                                 _mouse_decode:
   339 000003A4 55                              	PUSH	EBP
   340 000003A5 89 E5                           	MOV	EBP,ESP
   341 000003A7 56                              	PUSH	ESI
   342 000003A8 53                              	PUSH	EBX
   343 000003A9 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   344 000003AC 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
   345 000003AF 89 CE                           	MOV	ESI,ECX
   346 000003B1 8A 42 03                        	MOV	AL,BYTE [3+EDX]
   347 000003B4 84 C0                           	TEST	AL,AL
   348 000003B6 75 11                           	JNE	L30
   349 000003B8 80 F9 FA                        	CMP	CL,-6
   350 000003BB 74 06                           	JE	L39
   351 000003BD                                 L38:
   352 000003BD 31 C0                           	XOR	EAX,EAX
   353 000003BF                                 L29:
   354 000003BF 5B                              	POP	EBX
   355 000003C0 5E                              	POP	ESI
   356 000003C1 5D                              	POP	EBP
   357 000003C2 C3                              	RET
   358 000003C3                                 L39:
   359 000003C3 C6 42 03 01                     	MOV	BYTE [3+EDX],1
   360 000003C7 EB F4                           	JMP	L38
   361 000003C9                                 L30:
   362 000003C9 3C 01                           	CMP	AL,1
   363 000003CB 74 61                           	JE	L40
   364 000003CD 3C 02                           	CMP	AL,2
   365 000003CF 74 54                           	JE	L41
   366 000003D1 3C 03                           	CMP	AL,3
   367 000003D3 74 05                           	JE	L42
   368 000003D5 83 C8 FF                        	OR	EAX,-1
   369 000003D8 EB E5                           	JMP	L29
   370 000003DA                                 L42:
   371 000003DA 8A 1A                           	MOV	BL,BYTE [EDX]
   372 000003DC 81 E6 000000FF                  	AND	ESI,255
   373 000003E2 89 D8                           	MOV	EAX,EBX
   374 000003E4 88 4A 02                        	MOV	BYTE [2+EDX],CL
   375 000003E7 83 E0 07                        	AND	EAX,7
   376 000003EA 89 72 08                        	MOV	DWORD [8+EDX],ESI
   377 000003ED 89 42 0C                        	MOV	DWORD [12+EDX],EAX
   378 000003F0 88 D8                           	MOV	AL,BL
   379 000003F2 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
   380 000003F6 83 E0 10                        	AND	EAX,16
   381 000003F9 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   382 000003FC C6 42 03 01                     	MOV	BYTE [3+EDX],1
   383 00000400 84 C0                           	TEST	AL,AL
   384 00000402 74 09                           	JE	L36
   385 00000404 81 C9 FFFFFF00                  	OR	ECX,-256
   386 0000040A 89 4A 04                        	MOV	DWORD [4+EDX],ECX
   387 0000040D                                 L36:
   388 0000040D 83 E3 20                        	AND	EBX,32
   389 00000410 84 DB                           	TEST	BL,BL
   390 00000412 74 07                           	JE	L37
   391 00000414 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
   392 0000041B                                 L37:
   393 0000041B F7 5A 08                        	NEG	DWORD [8+EDX]
   394 0000041E B8 00000001                     	MOV	EAX,1
   395 00000423 EB 9A                           	JMP	L29
   396 00000425                                 L41:
   397 00000425 88 4A 01                        	MOV	BYTE [1+EDX],CL
   398 00000428 C6 42 03 03                     	MOV	BYTE [3+EDX],3
   399 0000042C EB 8F                           	JMP	L38
   400 0000042E                                 L40:
   401 0000042E 83 E6 C8                        	AND	ESI,-56
   402 00000431 89 F0                           	MOV	EAX,ESI
   403 00000433 3C 08                           	CMP	AL,8
   404 00000435 75 86                           	JNE	L38
   405 00000437 88 0A                           	MOV	BYTE [EDX],CL
   406 00000439 C6 42 03 02                     	MOV	BYTE [3+EDX],2
   407 0000043D E9 FFFFFF7B                     	JMP	L38
